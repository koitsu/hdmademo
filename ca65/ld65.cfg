#
# ld65.cfg
# Mode 20 (LoROM), 2.68MHz
#
MEMORY {
    ZP:    start = $0000,   size = $100,  type = rw;
    RAM:   start = $0200,   size = $1D00, type = rw;
    RAM7E: start = $7E2000, size = $E000, type = rw;
    RAM7F: start = $7F0000, size = $10000, type = rw;
    ROM00: start = $008000, size = $8000, type = ro, file = %O, fill = yes, fillval = $FF;
    ROM01: start = $018000, size = $8000, type = ro, file = %O, fill = yes, fillval = $FF;
    ROM02: start = $028000, size = $8000, type = ro, file = %O, fill = yes, fillval = $FF;
    ROM03: start = $038000, size = $8000, type = ro, file = %O, fill = yes, fillval = $FF;
    ROM04: start = $048000, size = $8000, type = ro, file = %O, fill = yes, fillval = $FF;
    ROM05: start = $058000, size = $8000, type = ro, file = %O, fill = yes, fillval = $FF;
    ROM06: start = $068000, size = $8000, type = ro, file = %O, fill = yes, fillval = $FF;
    ROM07: start = $078000, size = $8000, type = ro, file = %O, fill = yes, fillval = $FF;
}

SEGMENTS {
    ZEROPAGE: load = ZP,  type = zp;
    RAM:      load = RAM, type = bss, align = 256, define = yes;
    RODATA:   load = ROM00, type = ro;
    CODE:     load = ROM00, align = $8000, type = ro, optional = no;
    CARTINFO: load = ROM00, start = $FFB0, type = ro, optional = no;
    VECTORS:  load = ROM00, start = $FFE4, type = ro, optional = no;
    BANK01:   load = ROM01, align = $8000, type = ro, optional = yes;
    BANK02:   load = ROM02, align = $8000, type = ro, optional = yes;
    BANK03:   load = ROM03, align = $8000, type = ro, optional = yes;
    BANK04:   load = ROM04, align = $8000, type = ro, optional = yes;
    BANK05:   load = ROM05, align = $8000, type = ro, optional = yes;
    BANK06:   load = ROM06, align = $8000, type = ro, optional = yes;
    BANK07:   load = ROM07, align = $8000, type = ro, optional = yes;
}

FILES {
    %O: format = bin;
}
